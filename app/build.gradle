plugins {
    id 'com.android.application'
}

def properties = new Properties();
properties.load(project.rootProject.file('local.properties').newDataInputStream())

ext.getRequiredProperty = { key ->
  def value = properties.getProperty(key)
  if (!value) {
    throw new org.gradle.api.GradleException("Property '${key}' not found")
  }
  return value
}

android {
    compileSdk 29
    ndkVersion getRequiredProperty("ndk.version")

    defaultConfig {
        applicationId "io.zwin.zen.mirror"
        minSdk 24
        targetSdk 29
        versionCode 1
        versionName "0.1"


        externalNativeBuild {
            def ovrOpenXrMobileSdkDir = getRequiredProperty("ovr_openxr_mobile_sdk.dir")
            def protoc = getRequiredProperty("protoc")
            def grpcCppPlugin = getRequiredProperty("grpc_cpp_plugin")
            def grpcSysroot = getRequiredProperty("grpc_sysroot")

            ndk {
                abiFilters 'arm64-v8a'
            }

            cmake {
                arguments "-DPROJECT_DIR:STRING=${projectDir}",
                    "-DOVR_OPENXR_MOBILE_SDK_DIR:STRING=${ovrOpenXrMobileSdkDir}",
                    "-DZEN_REMOTE_PROTOC_EXECUTABLE:STRING=${protoc}",
                    "-DZEN_REMOTE_GRPC_CPP_PLUGIN_EXECUTABLE:STRING=${grpcCppPlugin}",
                    "-DZEN_REMOTE_GRPC_SYSROOT:STRING=${grpcSysroot}",
                    "-DAPP_NAME:STRING=${rootProject.getName()}"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
        }
    }

    lint {
        warningsAsErrors true
    }
}

task cleanCxx(type: Delete) {
  delete "${projectDir}/.cxx"
}
clean.dependsOn cleanCxx;
